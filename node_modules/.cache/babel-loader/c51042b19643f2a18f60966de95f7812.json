{"ast":null,"code":"var _jsxFileName = \"/Users/sowmyaravi/Desktop/burger-builder/src/components/Burger/Burger.js\";\nimport React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport './BurgerIngredient/BurgerIngredient.css';\nimport PropTypes from 'prop-types'; // method to transfer an Object of keyvalue pairs into array of burger ingredients where value of object gives howmany ingredients are needed and key for which type of ingredient\n//as ingredients is an object it has to be transformme into array of value of ingredients. mapcan be used only on array\n//.keys()=> extracts the keys of a given object and turns that into an array.Eg: string asalad, bacon\n//Object is JS\n\nconst burger = props => {\n  const transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    //new array to construct.Eg: Array(length) => Array(3) will give an array of 3 undefined spaces ie, 3 empty spaces.\n    // _ is blank element\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return /*#__PURE__*/React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      });\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Burger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), transformedIngredients, /*#__PURE__*/React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/Users/sowmyaravi/Desktop/burger-builder/src/components/Burger/Burger.js"],"names":["React","BurgerIngredient","PropTypes","burger","props","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAO,yCAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AAEA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAC9BC,GAD8B,CAC1BC,KAAK,IAAI;AACV;AACA;AACA,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACtD,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAIH,KAAK,GAAGG,CAAjC;AAAoC,QAAA,IAAI,EAAGH,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GAP8B,CAA/B;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKL,sBAFL,eAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAhBD;;AAiBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nimport './BurgerIngredient/BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\n// method to transfer an Object of keyvalue pairs into array of burger ingredients where value of object gives howmany ingredients are needed and key for which type of ingredient\n//as ingredients is an object it has to be transformme into array of value of ingredients. mapcan be used only on array\n//.keys()=> extracts the keys of a given object and turns that into an array.Eg: string asalad, bacon\n\n//Object is JS\nconst burger = (props) => {\n    const transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        //new array to construct.Eg: Array(length) => Array(3) will give an array of 3 undefined spaces ie, 3 empty spaces.\n        // _ is blank element\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key = {igKey + i} type ={igKey}/>\n        });\n    });\n    return(\n        <div className='Burger'> \n            <BurgerIngredient type =\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type =\"bread-bottom\"/>\n        </div>\n    );\n};\nexport default burger; "]},"metadata":{},"sourceType":"module"}