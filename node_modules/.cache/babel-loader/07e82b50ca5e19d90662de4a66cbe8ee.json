{"ast":null,"code":"var _jsxFileName = \"/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      console.log(this.props.ingredients); // loading: true because request is being sent\n\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'XYZ',\n          address: {\n            street: 'No.2',\n            country: 'France'\n          },\n          email: 'XYZ@gmail.com'\n        },\n        delivery: ' express'\n      }; // to send/ store data\n      // for firebase put .json format, orders is the node that gets created in firebase \n\n      axios.post('/orders.json', order).then(response => {\n        //To stop showing the spinner, to stop loading, purchasing: false => to not display modal \n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        //To stop showing the spinner, to stop loading\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"postal\",\n      placeholder: \"Post code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Order\"));\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \" Enter your Contact Details\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","name","email","address","street","postalCode","loading","orderHandler","event","preventDefault","console","log","props","ingredients","setState","order","price","customer","country","delivery","post","then","response","history","push","catch","error","render","form"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,EADH;AAELC,QAAAA,UAAU,EAAE;AAFP,OAHL;AAOJC,MAAAA,OAAO,EAAE;AAPL,KADwB;;AAAA,SAUhCC,YAVgC,GAUjBC,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACC,cAAN;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAvB,EAHiB,CAIjB;;AACJ,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAE;AAAV,OAAd;AAEA,YAAMS,KAAK,GAAG;AACVF,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADd;AAEVG,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAFR;AAGVC,QAAAA,QAAQ,EAAE;AACRhB,UAAAA,IAAI,EAAE,KADE;AAENE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,MADD;AAENc,YAAAA,OAAO,EAAE;AAFH,WAFH;AAMNhB,UAAAA,KAAK,EAAE;AAND,SAHA;AAWViB,QAAAA,QAAQ,EAAE;AAXA,OAAd,CAPqB,CAqBzB;AACA;;AACAvB,MAAAA,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA2BL,KAA3B,EACCM,IADD,CACMC,QAAQ,IAAI;AACd;AACD,aAAKR,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKM,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAEH,OANA,EAOAC,KAPA,CAOMC,KAAK,IAAI;AACf;AACD,aAAKZ,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACC,OAVA;AAWH,KA5CmC;AAAA;;AA6CpCqB,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAI,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,KAAD;AAAQ,MAAA,SAAS,EAAG,OAApB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAoD,MAAA,WAAW,EAAC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,eAEY,oBAAC,KAAD;AAAQ,MAAA,SAAS,EAAG,OAApB;AAA4B,MAAA,IAAI,EAAC,OAAjC;AAAyC,MAAA,IAAI,EAAC,OAA9C;AAAsD,MAAA,WAAW,EAAC,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFZ,eAGY,oBAAC,KAAD;AAAQ,MAAA,SAAS,EAAG,OAApB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAsD,MAAA,WAAW,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHZ,eAIY,oBAAC,KAAD;AAAQ,MAAA,SAAS,EAAG,OAApB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,IAAI,EAAC,QAA7C;AAAsD,MAAA,WAAW,EAAC,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ,eAKY,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,SAAjB;AAA2B,MAAA,OAAO,EAAK,KAAKrB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALZ,CADJ;;AAWA,QAAI,KAAKP,KAAL,CAAWM,OAAf,EAAwB;AACpBsB,MAAAA,IAAI,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,wBACQ;AAAK,MAAA,SAAS,EAAKjC,OAAO,CAACI,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEK6B,IAFL,CADR;AAQC;;AApE+B;;AAuEpC,eAAe7B,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        name: '',\n        email: '',\n        address: {\n            street: '',\n            postalCode: ''\n        },\n        loading: false\n    }\n    orderHandler =(event) => {\n            event.preventDefault();\n\n            console.log(this.props.ingredients);\n            // loading: true because request is being sent\n        this.setState({loading: true});\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            customer: {\n              name: 'XYZ',\n                address: {\n                  street: 'No.2',\n                   country: 'France'\n                },\n                email: 'XYZ@gmail.com'\n            },\n            delivery: ' express'\n        }\n\n    // to send/ store data\n    // for firebase put .json format, orders is the node that gets created in firebase \n    axios.post('/orders.json', order)\n    .then(response => {\n        //To stop showing the spinner, to stop loading, purchasing: false => to not display modal \n       this.setState({ loading: false});\n       this.props.history.push('/');\n\n   })\n   .catch(error => {\n    //To stop showing the spinner, to stop loading\n   this.setState({ loading: false});\n   });\n}\nrender(){\n    let form = (\n        <form>\n                    <Input  inputtype = \"input\" type=\"text\" name=\"name\" placeholder=\"Your name\" />\n                    <Input  inputtype = \"input\" type=\"email\" name=\"email\" placeholder=\"Your email\" />\n                    <Input  inputtype = \"input\" type=\"text\" name=\"street\" placeholder=\"Street\" />\n                    <Input  inputtype = \"input\" type=\"text\" name=\"postal\" placeholder=\"Post code\" />\n                    <Button btnType= \"Success\" clicked = { this.orderHandler} >Order</Button>\n\n\n                </form>\n    );\n    if (this.state.loading) {\n        form = <Spinner />;\n    }\n    return(\n            <div className = { classes.ContactData}>\n                <h4> Enter your Contact Details</h4>\n                {form}\n\n                \n            </div>\n        )\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}