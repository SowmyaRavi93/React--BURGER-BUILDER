{"ast":null,"code":"var _jsxFileName = \"/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      console.log(this.props.ingredients); // loading: true because request is being sent\n\n      {\n        this.setState({\n          loading: true\n        });\n        const order = {\n          ingredients: this.props.ingredients,\n          price: this.props.price,\n          customer: {\n            name: 'XYZ',\n            address: {\n              street: 'No.2',\n              country: 'France'\n            },\n            email: 'XYZ@gmail.com'\n          },\n          delivery: ' express'\n        }; // to send/ store data\n        // for firebase put .json format, orders is the node that gets created in firebase \n\n        axios.post('/orders.json', order).then(response => {\n          //To stop showing the spinner, to stop loading, purchasing: false => to not display modal \n          this.setState({\n            loading: false\n          });\n        }).catch(error => {\n          //To stop showing the spinner, to stop loading\n          this.setState({\n            loading: false\n          });\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \" Enter your Contact Details\"), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Your email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"street\",\n        placeholder: \"Street\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: classes.Input,\n        type: \"text\",\n        name: \"postal\",\n        placeholder: \"Post code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, \"Order\")));\n    };\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","ContactData","state","name","email","address","street","postalCode","loading","orderHandler","event","preventDefault","console","log","props","ingredients","setState","order","price","customer","country","delivery","post","then","response","catch","error","Input"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\n\nclass ContactData extends Component {\n    state = {\n        name: '',\n        email: '',\n        address: {\n            street: '',\n            postalCode: ''\n        },\n        loading: false\n    }\n    orderHandler =(event) => {\n            event.preventDefault();\n\n            console.log(this.props.ingredients);\n            // loading: true because request is being sent\n        {this.setState({loading: true});\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            customer: {\n              name: 'XYZ',\n                address: {\n                  street: 'No.2',\n                   country: 'France'\n                },\n                email: 'XYZ@gmail.com'\n            },\n            delivery: ' express'\n        }\n\n    // to send/ store data\n    // for firebase put .json format, orders is the node that gets created in firebase \n    axios.post('/orders.json', order)\n    .then(response => {\n        //To stop showing the spinner, to stop loading, purchasing: false => to not display modal \n       this.setState({ loading: false});\n\n   })\n   .catch(error => {\n    //To stop showing the spinner, to stop loading\n   this.setState({ loading: false});\n   });\n}\n\n        return(\n            <div className = { classes.ContactData}>\n                <h4> Enter your Contact Details</h4>\n\n                <form>\n                    <input className = {classes.Input} type=\"text\" name=\"name\" placeholder=\"Your name\" />\n                    <input className = {classes.Input} type=\"email\" name=\"email\" placeholder=\"Your email\" />\n                    <input className = {classes.Input} type=\"text\" name=\"street\" placeholder=\"Street\" />\n                    <input className = {classes.Input} type=\"text\" name=\"postal\" placeholder=\"Post code\" />\n                    <Button btnType= \"Success\" clicked = { this.orderHandler} >Order</Button>\n\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}