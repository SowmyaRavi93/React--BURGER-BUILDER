{"ast":null,"code":"var _jsxFileName = \"/Users/sowmyaravi/Desktop/burger-builder/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentDidMount() {\n      axios.interceptors.response.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, this.state.error ? this.state.error.message : null), /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/Users/sowmyaravi/Desktop/burger-builder/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentDidMount","interceptors","response","use","req","res","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAAEC,gBAAF,EAAoBC,KAApB,KAA8B;AAAA;;AACnD,iBAAO,cAAcL,SAAd,CAAyB;AAAA;AAAA;AAAA,WAC5BM,KAD4B,GACpB;AACJC,QAAAA,KAAK,EAAC;AADF,OADoB;;AAAA,WAkB5BC,qBAlB4B,GAkBJ,MAAM;AAC1B,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAC;AAAP,SAAd;AACH,OApB2B;AAAA;;AAK5BG,IAAAA,iBAAiB,GAAI;AAEjBL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCC,GAAG,IAAI;AACnC,aAAKL,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,eAAOO,GAAP;AACH,OAHD;AAMAT,MAAAA,KAAK,CAACM,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgCE,GAAG,IAAIA,GAAvC,EAA4CR,KAAK,IAAG;AAChD,aAAKE,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACH,OAFD;AAGH;;AAKDS,IAAAA,MAAM,GAAG;AACL,0BAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACA,QAAA,IAAI,EAAI,KAAKV,KAAL,CAAWC,KADnB;AAEA,QAAA,WAAW,EAAI,KAAKC,qBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,OAApC,GAA8C,IAHnD,CADJ,eAOI,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,CAFA;AAcP;;AApC+B,GAAhC;AAsCH,CAvCD;;AAwCA,eAAef,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios) => {\n    return class extends Component  {\n        state = {\n            error:null\n        }\n\n        componentDidMount () {\n\n            axios.interceptors.response.use(req => { \n                this.setState({error: null});\n                return req;\n            });\n\n\n            axios.interceptors.response.use(res => res, error =>{\n                this.setState({error: error});\n            });\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error:null})\n        }\n        render() {\n            return (\n              \n            <Aux>\n                <Modal \n                show = {this.state.error}\n                modalClosed = {this.errorConfirmedHandler}>\n                    {this.state.error ? this.state.error.message : null}\n                    \n                </Modal>\n                <WrappedComponent {...this.props} />\n                    \n                \n            </Aux>\n        );\n    }\n}\n}\nexport default withErrorHandler;"]},"metadata":{},"sourceType":"module"}