{"ast":null,"code":"var _jsxFileName = \"/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelHandeller = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CheckoutSummary, {\n      ingredients: this.props.ings,\n      checkoutCancelled: this.checkoutCancelHandeller,\n      checkoutContinued: this.checkoutContinuedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: this.props.match.path + '/contact-data' //component = {ContactData} to call component or\n      ,\n      component: ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/Users/sowmyaravi/Desktop/burger-builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","CheckoutSummary","Route","ContactData","connect","Checkout","checkoutCancelHandeller","props","history","goBack","checkoutContinuedHandler","replace","render","ings","match","path","mapStateToProps","state","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAqB7BM,uBArB6B,GAqBJ,MAAM;AAC3B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAvB4B;;AAAA,SAyB7BC,wBAzB6B,GAyBF,MAAM;AAC7B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KA3B4B;AAAA;;AA4B7BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AACA,MAAA,WAAW,EAAK,KAAKL,KAAL,CAAWM,IAD3B;AAEA,MAAA,iBAAiB,EAAK,KAAKP,uBAF3B;AAGA,MAAA,iBAAiB,EAAK,KAAKI,wBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAI,KAAKH,KAAL,CAAWO,KAAX,CAAiBC,IAAjB,GAAwB,eAAvC,CACA;AADA;AAEA,MAAA,SAAS,EAAKZ,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAWH;;AAxC4B;;AA4CjC,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,IAAI,EAAEI,KAAK,CAACC;AADT,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAEY,eAAF,CAAP,CAA2BX,QAA3B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport {connect} from 'react-redux';\n\n\nclass Checkout extends Component {\n    \n\n   /* componentWillMount(){\n        const query = new URLSearchParams(this.props.location.search);\n        //ingredients object\n        const ingredients = {};\n        let price = 0;\n        //.entries to loop through different queryparams\n        for (let param of query.entries()){\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n                // will be in ['salad' , '1'] format\n            ingredients[param[0]] = +param[1];\n        }\n            }\n            \n        this.setState({ingredients: ingredients, totalPrice: price})\n    }*/\n\n    checkoutCancelHandeller =() => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render() {\n        return(\n            <div>\n                <CheckoutSummary \n                ingredients = { this.props.ings }\n                checkoutCancelled = { this.checkoutCancelHandeller}\n                checkoutContinued = { this.checkoutContinuedHandler} />\n                <Route path = {this.props.match.path + '/contact-data'} \n                //component = {ContactData} to call component or\n                component = { ContactData} />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    }\n};\n\nexport default connect (mapStateToProps) (Checkout);\n"]},"metadata":{},"sourceType":"module"}